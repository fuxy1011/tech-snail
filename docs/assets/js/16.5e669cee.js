(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{285:function(t,a,e){"use strict";e.r(a);var r=e(38),i=Object(r.a)({},function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"浏览器缓存策略"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器缓存策略","aria-hidden":"true"}},[t._v("#")]),t._v(" 浏览器缓存策略")]),t._v(" "),e("h2",{attrs:{id:"概要"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#概要","aria-hidden":"true"}},[t._v("#")]),t._v(" 概要")]),t._v(" "),e("ul",[e("li",[t._v("强缓存")]),t._v(" "),e("li",[t._v("协商缓存")])]),t._v(" "),e("h2",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),e("ul",[e("li",[t._v("先判断浏览器缓存是否过期(通过 Cache-Control/Expires 判断)")]),t._v(" "),e("li",[t._v("如果未过期，则强制使用缓存(强缓存)，即返回 200 from cache，通知浏览器使用本地缓存")]),t._v(" "),e("li",[t._v("如果已过期，则使用协商缓存。即进行接口请求和服务端协商，如果服务端确认本地文件未修改后，服务端返回 304，通知浏览器使用本地缓存。")])]),t._v(" "),e("h2",{attrs:{id:"强缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#强缓存","aria-hidden":"true"}},[t._v("#")]),t._v(" 强缓存")]),t._v(" "),e("blockquote",[e("p",[t._v("强制直接使用本地缓存。浏览器判断本地缓存是否过期，未过期时，就直接使用，无需发起http请求")])]),t._v(" "),e("h2",{attrs:{id:"协商缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存","aria-hidden":"true"}},[t._v("#")]),t._v(" 协商缓存")]),t._v(" "),e("blockquote",[e("p",[t._v("发送http和服务端协商后使用本地缓存。浏览器判断本地缓存是否过期，已经过期时，使用协商缓存")])]),t._v(" "),e("h2",{attrs:{id:"实际应用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实际应用","aria-hidden":"true"}},[t._v("#")]),t._v(" 实际应用")]),t._v(" "),e("blockquote",[e("p",[t._v("协商缓存 方案")])]),t._v(" "),e("ul",[e("li",[t._v("唯一标识方案: Etag(response 携带) & If-None-Match(request携带，上一次返回的 Etag) =》服务器判断资源是否被修改，")]),t._v(" "),e("li",[t._v("最后一次修改时间: Last-Modified(response) & If-Modified-Since (request，上一次返回的Last-Modified)")])]),t._v(" "),e("p",[t._v("结果处理:")]),t._v(" "),e("ul",[e("li",[t._v("如果一致，则直接返回 304 通知浏览器使用缓存")]),t._v(" "),e("li",[t._v("如不一致，则服务端返回新的资源")])]),t._v(" "),e("h2",{attrs:{id:"易混淆说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#易混淆说明","aria-hidden":"true"}},[t._v("#")]),t._v(" 易混淆说明")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("如何区分强缓存和协商缓存？")]),t._v(" "),e("ul",[e("li",[t._v("通过http头部。")]),t._v(" "),e("li",[t._v("强缓存: （"),e("code",[t._v("http1.1")]),t._v("）Cache-Control/Max-Age(Max-Age不是一个头部，它是Cache-Control头部的值);（http1.0）Pragma/Expires")]),t._v(" "),e("li",[t._v("协商缓存:（"),e("code",[t._v("http1.1")]),t._v("）If-None-Match/E-tag;（http1.0）If-Modified-Since/Last-Modified")])])]),t._v(" "),e("li",[e("p",[t._v("Cache-Control("),e("code",[t._v("http1.1")]),t._v(")：缓存控制头部，有no-cache、max-age等多种取值")])]),t._v(" "),e("li",[e("p",[t._v("Max-Age("),e("code",[t._v("http1.1")]),t._v(")：服务端配置的，用来控制强缓存，在规定的时间之内，浏览器无需发出请求，直接使用本地缓存，注意，Max-Age是Cache-Control头部的值，不是独立的头部，譬如Cache-Control: max-age=3600，而且它值得是绝对时间，由浏览器自己计算")])]),t._v(" "),e("li",[e("p",[t._v("Pragma(http1.0)：严格来说，它不属于专门的缓存控制头部，但是它设置no-cache时可以让本地强缓存失效（属于编译控制，来实现特定的指令，主要是因为兼容http1.0，所以以前又被大量应用）")])]),t._v(" "),e("li",[e("p",[t._v("Expires(http1.0)：服务端配置的，属于强缓存，用来控制在规定的时间之前，浏览器不会发出请求，而是直接使用本地缓存，注意，Expires一般对应服务器端时间，如Expires：Fri, 30 Oct 1998 14:19:41")])]),t._v(" "),e("li",[e("p",[t._v("(E-tag)If-None-Match/E-tag("),e("code",[t._v("http1.1")]),t._v(")：这两个是成对出现的，属于协商缓存的内容，其中浏览器的头部是If-None-Match，而服务端的是E-tag，同样，发出请求后，如果If-None-Match和E-tag匹配，则代表内容未变，通知浏览器使用本地缓存，和Last-Modified不同，E-tag更精确，它是类似于指纹一样的东西，基于FileEtag INode Mtime Size生成，也就是说，只要文件变，指纹就会变，而且没有1s精确度的限制。")])]),t._v(" "),e("li",[e("p",[t._v("(Last-Modified)If-Modified-Since/Last-Modified(http1.0)：这两个是成对出现的，属于协商缓存的内容，其中浏览器的头部是If-Modified-Since，而服务端的是Last-Modified，它的作用是，在发起请求时，如果If-Modified-Since和Last-Modified匹配，那么代表服务器资源并未改变，因此服务端不会返回资源实体，而是只返回头部，通知浏览器可以使用本地缓存。Last-Modified，顾名思义，指的是文件最后的修改时间，而且只能精确到1s以内")])])]),t._v(" "),e("h2",{attrs:{id:"注意事项"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#注意事项","aria-hidden":"true"}},[t._v("#")]),t._v(" 注意事项")]),t._v(" "),e("blockquote",[e("p",[t._v("Cache-Control的 max-age 优先级高于 Expires")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("Expires使用的是服务器端的时间\n\n但是有时候会有这样一种情况-客户端时间和服务端不同步\n\n那这样，可能就会出问题了，造成了浏览器本地的缓存无用或者一直无法过期\n\n所以一般http1.1后不推荐使用Expires\n\n而Max-Age使用的是客户端本地时间的计算，因此不会有这个问题\n\n因此推荐使用Max-Age。\n\n注意，如果同时启用了Cache-Control与Expires，Cache-Control优先级高\n")])])]),e("blockquote",[e("p",[t._v("Etag高于Last-Modified")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("Last-Modified：\n\n表明服务端的文件最后何时改变的\n\n* 周期性修改，但内容未变时，会导致缓存失效\n* 最小粒度只到 s， s 以内的改动无法检测到\n\n而E-tag：\n\n是一种指纹机制，代表文件相关指纹\n\n* 只有文件变才会变，也只要文件变就会变，\n* 也没有精确时间的限制，只要文件一遍，立马E-tag就不一样了\n\n如果同时带有E-tag和Last-Modified，服务端会优先检查E-tag\n")])])]),e("h2",{attrs:{id:"参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考","aria-hidden":"true"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://juejin.im/post/5c64d15d6fb9a049d37f9c20",target:"_blank",rel:"noopener noreferrer"}},[t._v("中高级前端大厂面试秘籍，为你保驾护航金三银四，直通大厂(上)"),e("OutboundLink")],1),e("br"),t._v(" "),e("a",{attrs:{href:"http://www.dailichun.com/2018/03/12/whenyouenteraurl.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("从输入URL到页面加载的过程？如何由一道题完善自己的前端知识体系！"),e("OutboundLink")],1)])])},[],!1,null,null,null);a.default=i.exports}}]);