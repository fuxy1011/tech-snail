(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{301:function(n,e,t){"use strict";t.r(e);var l=t(38),a=Object(l.a)({},function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"算法的效率是通过算法复杂度来衡量的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#算法的效率是通过算法复杂度来衡量的","aria-hidden":"true"}},[n._v("#")]),n._v(" 算法的效率是通过算法复杂度来衡量的")]),n._v(" "),t("p",[n._v("算法的好坏可以通过算法复杂度来衡量，算法复杂度包括时间复杂度和空间复杂度两个。时间复杂度由于好估算、好评估等特点，是面试中考查的重点。空间复杂度在面试中考查得不多。")]),n._v(" "),t("p",[n._v("常见的时间复杂度有：")]),n._v(" "),t("ul",[t("li",[n._v("常数阶 O(1)")]),n._v(" "),t("li",[n._v("对数阶 O(logN)")]),n._v(" "),t("li",[n._v("线性阶 O(n)")]),n._v(" "),t("li",[n._v("线性对数阶 O(nlogN)")]),n._v(" "),t("li",[n._v("平方阶 O(n^2)")]),n._v(" "),t("li",[n._v("立方阶 O(n^3)")]),n._v(" "),t("li",[n._v("!k次方阶 O(n^k)")]),n._v(" "),t("li",[n._v("指数阶O(2^n)")])]),n._v(" "),t("p",[n._v("随着问题规模 n 的不断增大，上述时间复杂度不断增大，算法的执行效率越低。")]),n._v(" "),t("p",[n._v("一般做算法复杂度分析的时候，遵循下面的技巧：")]),n._v(" "),t("ul",[t("li",[n._v("看看有几重循环，一般来说一重就是O(n)，两重就是 O(n^2)，以此类推")]),n._v(" "),t("li",[n._v("如果有二分，则为O(logN)")]),n._v(" "),t("li",[n._v("保留最高项，去除常数项")])]),n._v(" "),t("blockquote",[t("p",[n._v("题目：分析下面代码的算法复杂度（为了方便，我已经在注释中加了代码分析）")])]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("let i =0; // 语句执行一次 \nwhile (i < n) { // 语句执行 n 次 \n  console.log(`Current i is ${i}`); //语句执行 n 次\n  i++; // 语句执行 n 次\n}\n")])])]),t("p",[n._v("根据注释可以得到，算法复杂度为1 + n + n + n = 1 + 3n，去除常数项，为O(n)。")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("let number = 1; // 语句执行一次 \nwhile (number < n) { // 语句执行 logN 次\n  number *= 2; // 语句执行 logN 次\n}\n")])])]),t("blockquote",[t("p",[n._v("上面代码while的跳出判断条件是number<n，而循环体内number增长速度是(2^n)，所以循环代码实际执行logN次，复杂度为：1 + 2 * logN = O(logN)")])]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("for (let i = 0; i < n; i++) {// 语句执行 n 次\n  for (let j = 0; j < n; j++) {// 语句执行 n^2 次\n    console.log('I am here!'); // 语句执行 n^2 次\n  }\n}\n")])])]),t("p",[n._v("上面代码是两个for循环嵌套，很容易得出复杂度为：O(n^2)")]),n._v(" "),t("h2",{attrs:{id:"参考网址"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考网址","aria-hidden":"true"}},[n._v("#")]),n._v(" 参考网址")]),n._v(" "),t("p",[t("a",{attrs:{href:""}},[n._v("掘进小册")])])])},[],!1,null,null,null);e.default=a.exports}}]);