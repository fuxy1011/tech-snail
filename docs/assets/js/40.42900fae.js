(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{289:function(t,a,e){"use strict";e.r(a);var r=e(38),n=Object(r.a)({},function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"重绘和回流"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重绘和回流","aria-hidden":"true"}},[t._v("#")]),t._v(" 重绘和回流")]),t._v(" "),e("p",[t._v("重绘和回流是面试题经常考的题目，也是性能优化当中应该注意的点，下面笔者简单介绍下。")]),t._v(" "),e("ul",[e("li",[t._v("重绘：指的是当页面中的元素不脱离文档流，而简单地进行样式的变化，比如修改颜色、背景等，浏览器重新绘制样式")]),t._v(" "),e("li",[t._v("回流：指的是处于文档流中 DOM 的尺寸大小、位置或者某些属性发生变化时，导致浏览器重新渲染部分或全部文档的情况")])]),t._v(" "),e("p",[t._v("相比之下，回流要比重绘消耗性能开支更大。另外，一些属性的读取也会引起回流，比如读取某个 DOM 的高度和宽度，或者使用getComputedStyle方法。在写代码的时候要避免回流和重绘。比如在笔试中可能会遇见下面的题目：")]),t._v(" "),e("blockquote",[e("p",[t._v("题目：找出下面代码的优化点，并且优化它")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("var data = ['string1', 'string2', 'string3'];\nfor(var i = 0; i < data.length; i++){\n    var dom = document.getElementById('list');\n    dom.innerHTML += '<li>' + data[i] + '</li>';\n}\n")])])]),e("p",[t._v("上面的代码在循环中每次都获取dom，然后对其内部的 HTML 进行累加li，每次都会操作 DOM 结构，可以改成使用documentFragment或者先遍历组成 HTML 的字符串，最后操作一次innerHTML。")]),t._v(" "),e("h2",{attrs:{id:"参考网址"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考网址","aria-hidden":"true"}},[t._v("#")]),t._v(" 参考网址")]),t._v(" "),e("p",[e("a",{attrs:{href:""}},[t._v("掘进小册")])])])},[],!1,null,null,null);a.default=n.exports}}]);